#! /bin/bash

# Debian (post-)install scripts
# Copyright (C) 2020
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


dir="$(dirname "$0")"

zsh="${dir}/packages/zsh.list"
zshrc="${dir}/dotfiles/zshrc"
p10krc="${dir}/dotfiles/p10k"
function install_zsh {
  show_header "Installing zsh."
  check_installed "${zsh}"
  check_fail
  show_success "zsh installed."

  mkdir -p "${HOME}/.local/share/zsh/site-functions"

  show_info "Copying zshrc."
  cp -f "${zshrc}" "${HOME}/.zshrc"

  show_info "Copying powerlevel10k config."
  cp -f "${p10krc}" "${HOME}/.p10k.zsh"
}

selinux="${dir}/packages/selinux.list"
function install_selinux {
  show_header "Installing SELinux and setting rules."
  check_installed "${selinux}"
  check_fail
  show_success "SELinux installed."

  show_info "Activating SELinux."
  sudo selinux-activate

  if [ -f /etc/default/grub ]; then
    show_info "Updating GRUB kernel command line."
    local cmdline
    cmdline="$(sed -n "s|^GRUB_CMDLINE_LINUX=\"\(.*\)\"|\1|p" /etc/default/grub)"
    if ! [[ "${cmdline}" =~ security=selinux ]]; then
      sed -i "s|^GRUB_CMDLINE_LINUX=\"${cmdline}\"|GRUB_CMDLINE_LINUX=\"${cmdline} security=selinux selinux=1\"|g" /etc/default/grub
    fi
  fi

  if [[ "$(sudo bootctl is-installed)" = "yes" ]]; then
    show_info "Updating systemd-boot kernel command line(s)."
    local cmdline
    local efidir
    local entry
    efidir="$(bootctl -p)"
    for entry in "${efidir}"/loader/entries/*.conf; do
      cmdline="$(sed -n "s/^options\s\+\(.*\)/\1/p" "${entry}")"
      if ! [[ "${cmdline}" =~ security=selinux ]]; then
        sed -i "s|^options\(\s\+\)${cmdline}|options\1${cmdline} selinux=1 security=selinux|g" "${entry}"
      fi
    done
  fi

  show_success "SELinux setup complete."
  show_info \
    "Reboot the computer to start using SELinux. It will be in permissive" \
    "mode by default. Run # sestatus after rebooting to verify that SELinux" \
    "is installed properly. To start enforcing policies, add 'enforcing=1' " \
    "to the kernel command line."
}

utils="${dir}/packages/utils.list"
tmuxconfig="${dir}/dotfiles/tmux.conf"
function install_utils {
  show_header "Installing general utilities."
  check_installed "${utils}"
  check_fail
  show_success "Utilities installed."

  show_info "Installing tmux config."
  cp -f "${tmuxconfig}" "${HOME}/.tmux.conf"
}

laptop="${dir}/packages/laptop.list"
function install_laptop {
  show_header "Installing laptop utilities."
  check_installed "${laptop}"
  check_fail
  show_success "Laptop utilities installed."

  # Enable tlp on laptops.
  show_info "Enabling and starting tlp systemd units."
  sudo systemctl enable tlp.service
  sudo systemctl start tlp.service
  show_success "tlp enabled."
}

function 01-misc {
  show_question "Misc: what do you want to install?"
  show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"

  local options=(
    "Back"
    "All"
    "Linux utilities"
    "Laptop tools"
    "SELinux"
    "zsh")
  local option
  select option in "${options[@]}"; do
    case $option in
      "Back")
        break
        ;;
      "All")
        install_utils
        install_laptop
        install_selinux
        install_zsh
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Linux utilities")
        install_utils
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "Laptop tools")
        install_laptop
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "SELinux")
        install_selinux
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      "zsh")
        install_zsh
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
      *)
        show_warning "Invalid option."
        show_info "Main\n ${endbranch} Misc (Hit ENTER to see options again.)"
        ;;
    esac
  done
}
