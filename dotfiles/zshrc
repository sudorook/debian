#! /bin/zsh

#
# ~/.zshrc
#

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#
# Global settings
#

export BROWSER="firefox"
if command -v nvim.appimage > /dev/null 2>&1; then
  export EDITOR="nvim.appimage"
  export DIFFPROG='nvim.appimage -d'
elif command -v nvim > /dev/null 2>&1; then
  export EDITOR="nvim"
  export DIFFPROG='nvim -d'
elif command -v vim > /dev/null 2>&1; then
  export EDITOR="vim"
  export DIFFPROG='vimdiff'
fi
export SUDO_EDITOR="${EDITOR}"
export VISUAL="${EDITOR}"

#
# Set environment variables for programming languages
#

# go
if command -v go > /dev/null 2>&1; then
  export GOPATH="${HOME}/.go"
  if ! [[ "${PATH}" =~ :?${GOPATH}:? ]]; then
    export PATH="${GOPATH}/bin:${PATH}"
  fi
fi

# ruby
if command -v ruby > /dev/null 2>&1; then
  GEM_HOME=$(gem env gemdir)
  export GEM_HOME
  if ! [[ "${PATH}" =~ :?${GEM_HOME}/bin:? ]]; then
    PATH="${GEM_HOME}/bin:${PATH}"
    export PATH
  fi
fi

# rust
if command -v cargo > /dev/null 2>&1; then
  if ! [[ "${PATH}" =~ :?${HOME}/.cargo/bin:? ]]; then
    export PATH="${HOME}/.cargo/bin:${PATH}"
  fi
fi

if command -v luarocks > /dev/null 2>&1; then
  if ! [[ "${PATH}" =~ :?${HOME}/.luarocks/bin:? ]]; then
    export PATH="${HOME}/.luarocks/bin:${PATH}"
  fi
fi

# npm
if command -v npm > /dev/null 2>&1; then
  export NPM_CONFIG_PREFIX="${HOME}/.npm"
  if ! [[ "${PATH}" =~ :?${HOME}/.npm/bin:? ]]; then
    export PATH="${HOME}/.npm/bin:${PATH}"
  fi
fi

# R
if command -v R Rscript > /dev/null 2>&1; then
  R_LIBS_USER="$(Rscript --version)"
  R_LIBS_USER=("${=R_LIBS_USER}")
  R_LIBS_USER="${HOME}/.R/${R_LIBS_USER[4]}"
  if [ -n "${R_LIBS_USER}" ]; then
    export R_LIBS_USER
    if ! [ -d "${R_LIBS_USER}" ]; then
      mkdir -p "${R_LIBS_USER}"
    fi
    alias R='R --no-save '
    if [ -d /usr/share/mathjax ]; then
      export RMARKDOWN_MATHJAX_PATH=/usr/share/mathjax
    fi
  fi
fi

# zsh
if [ -d ${HOME}/.local/share/zsh/site-functions ]; then
  fpath=(${HOME}/.local/share/zsh/site-functions "${fpath[@]}")
fi

# custom scripts
if ! [[ "${PATH}" =~ :?${HOME}/.scripts:? ]]; then
  export PATH="${HOME}/.scripts:${PATH}"
fi

# local executables
if ! [[ "${PATH}" =~ :?${HOME}/.local/bin:? ]]; then
  export PATH="${HOME}/.local/bin:${PATH}"
fi

# local libraries
if ! [[ "${LD_LIBRARY_PATH}" =~ :?/usr/local/lib:? ]]; then
  LD_LIBRARY_PATH="/usr/local/lib64:/usr/local/lib32:/usr/local/lib:${LD_LIBRARY_PATH}"
fi
if ! [[ "${LD_LIBRARY_PATH}" =~ :?${HOME}/.local/lib:? ]]; then
  LD_LIBRARY_PATH="${HOME}/.local/lib64:${HOME}/.local/lib32:${HOME}/.local/lib:${LD_LIBRARY_PATH}"
fi
export LD_LIBRARY_PATH

#
# Set zsh aliases
#

if command -v nvim.appimage > /dev/null 2>&1; then
  alias nvim='nvim.appimage '
  alias vi='nvim.appimage '
  alias vim='nvim.appimage '
  alias vimdiff='nvim.appimage -d '
elif command -v nvim > /dev/null 2>&1; then
  alias vi='nvim '
  alias vim='nvim '
  alias vimdiff='nvim -d '
elif command -v vim > /dev/null 2>&1; then
  alias vi='vim '
fi
alias sudo='sudo '
alias visudo='EDITOR=${EDITOR} visudo '
alias scp='noglob scp'
alias grep='grep --color=auto'
alias diff='diff --color=auto'
alias happymake="make -j$(nproc) && sudo make install"

function superupgrade {
  sudo sh -c 'apt update && apt full-upgrade -y && apt autoremove -y'
}

function megapurge {
  sudo sh -c 'apt autoremove -y && apt autoclean -y && apt clean -y && journalctl --rotate && journalctl --vacuum-time=1s'
}

function make_silent {
  if command -v "${1}" > /dev/null 2>&1; then
    local cmd
    local bin
    bin="$(which "${1}")"
    cmd="function ${1} { local cmd=\"(${bin} \${@:q} > /dev/null 2>&1 &!)\"; eval \"\${cmd}\"; }"
    eval "${cmd}"
  fi
}

function run_silent {
  if command -v "${1}" > /dev/null 2>&1; then
    local bin="${1}"
    local args=(${@:2})
    (${bin} ${args[@]} > /dev/null 2>&1 &!);
  fi
}

make_silent ebook-viewer
make_silent eog
make_silent evince
make_silent feh
make_silent firefox
make_silent gimp
make_silent gitg
make_silent gitk
make_silent gwenview
make_silent inkscape
make_silent krita
make_silent okular

unset -f make_silent

if { command -v yt-dlp && ! command -v youtube-dl; } > /dev/null 2>&1; then
  alias youtube-dl='yt-dlp '
fi

# list directory contents
alias ls='ls --color=auto'
alias sl='ls'
alias lsa='ls -lah'
alias l='ls -lah'
alias ll='ls -lh'
alias la='ls -lAh'

#
# Color terminal output
#

# color ls output based on filetype
eval "$(dircolors -b)"

# color the man pages
if { command -v nvim || command -v nvim.appimage } > /dev/null 2>&1; then
  export MANPAGER='nvim +Man! --clean'
elif command -v less > /dev/null 2>&1; then
  export MANPAGER="less -R --use-color -Dd+r -Du+b -s -M +Gg"
  # export MANROFFOPT="-P -c"
else
  function man {
    env LESS_TERMCAP_mb=$'\E[01;31m' \
      LESS_TERMCAP_md=$'\E[01;38;5;74m' \
      LESS_TERMCAP_me=$'\E[0m' \
      LESS_TERMCAP_se=$'\E[0m' \
      LESS_TERMCAP_so=$'\E[38;5;246m' \
      LESS_TERMCAP_ue=$'\E[0m' \
      LESS_TERMCAP_us=$'\E[04;38;5;146m' \
      man "$@"
  }
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

#
# Add zsh plugins
#

# antigen
test -f /usr/share/zsh-antigen/antigen.zsh && {
  source /usr/share/zsh-antigen/antigen.zsh

  # powerlevel10k theme
  antigen theme romkatv/powerlevel10k
  source "${HOME}/.p10k.zsh"

  # fish-like syntax highlighting
  antigen bundle zsh-users/zsh-completions
  antigen bundle zsh-users/zsh-syntax-highlighting
  antigen bundle zsh-users/zsh-autosuggestions
  antigen bundle zsh-users/zsh-history-substring-search

  antigen apply
}
